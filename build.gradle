plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.test.app'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation ('org.springframework.boot:spring-boot-starter-validation') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation ('org.springframework.boot:spring-boot-starter-web') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation ('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.5.3'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		html.required = true
	}
	classDirectories.setFrom(fileTree(layout.buildDirectory.dir("classes/java/main")) {
		exclude '**/config/**', '**/model/**', '**/repository/**', '**/exception/*.*', '**/starter/**'
	})
	sourceDirectories.setFrom(files('src/main/java'))
	executionData.setFrom(fileTree(layout.buildDirectory.get().asFile).include("/jacoco/test.exec"))
}